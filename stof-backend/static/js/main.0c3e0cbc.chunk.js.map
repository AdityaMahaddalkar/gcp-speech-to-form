{"version":3,"sources":["logo.svg","components/404-not-found/Not.Found.Component.jsx","utils/Base.URLs.js","services/HTML.Form.Service.js","components/html-form/Form.Component.jsx","routes/App.Routes.jsx","App.js","reportWebVitals.js","index.js"],"names":["NotFoundComponent","baseURLs","local","postAudioData","blob","setCommand","console","log","fd","FormData","append","Axios","post","then","resp","data","transcript","FormComponent","React","useState","selectedId","setSelectedId","record","setRecord","setBlob","command","uploadAudioData","a","ids","useEffect","startsWith","id","split","trim","toLowerCase","document","getElementById","style","backgroundColor","remainingId","value","Container","className","Form","Row","Col","Group","Label","Control","type","placeholder","as","rows","Button","variant","onClick","onStop","recordedBlob","onData","strokeColor","channelCount","mimeType","AppRoutes","Fragment","Navbar","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","Item","Link","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0c3e0cbc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\n\r\nimport { Jumbotron, Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction NotFoundComponent() {\r\n  return (\r\n    <div>\r\n      <Jumbotron id=\"main-jumbotron\">\r\n        <h1>404 - Page Not Found</h1>\r\n        <p>Seems like you took a wrong turn.</p>\r\n        <Link to=\"/home\">\r\n          <Button>Go back to Home Page</Button>\r\n        </Link>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFoundComponent;\r\n","export const baseURLs = {\r\n  local: \"http://localhost:8000\",\r\n};\r\n","import Axios from \"axios\";\r\nimport { baseURLs } from \"../utils/Base.URLs\";\r\n\r\nconst env = \"local\";\r\n\r\nexport const postAudioData = (blob, setCommand) => {\r\n  console.log(`Uploading blob: ${blob.blob}`);\r\n  var fd = new FormData();\r\n  fd.append(\"audio\", blob.blob, \"audio.mp3\");\r\n\r\n  Axios.post(`${baseURLs[env]}/html/audio`, fd).then((resp) => {\r\n    console.log(resp);\r\n    if (resp.data.transcript) {\r\n      setCommand(resp.data.transcript);\r\n    }\r\n  });\r\n};\r\n","import Axios from \"axios\";\r\nimport React from \"react\";\r\nimport { Badge, Button, Col, Container, Form, Row } from \"react-bootstrap\";\r\nimport { ReactMic } from \"react-mic\";\r\nimport { postAudioData } from \"../../services/HTML.Form.Service\";\r\n\r\nfunction FormComponent() {\r\n  const [selectedId, setSelectedId] = React.useState(null);\r\n\r\n  const [record, setRecord] = React.useState(false);\r\n  const [blob, setBlob] = React.useState(null);\r\n\r\n  const [command, setCommand] = React.useState(\"\");\r\n\r\n  const startRecording = () => {\r\n    setRecord(true);\r\n  };\r\n\r\n  const stopRecording = () => {\r\n    setRecord(false);\r\n  };\r\n\r\n  const onData = (recordedBlob) => {\r\n    // console.log(\"chunk of real-time data is: \", recordedBlob);\r\n    return;\r\n  };\r\n\r\n  const onStop = (recordedBlob) => {\r\n    console.log(\"recordedBlob is: \", recordedBlob);\r\n    setBlob(recordedBlob);\r\n  };\r\n\r\n  const uploadAudioData = async () => {\r\n    postAudioData(blob, setCommand);\r\n  };\r\n\r\n  const ids = [\"email\", \"password\", \"address\", \"phone\"];\r\n\r\n  React.useEffect(() => {\r\n    // Case 1: Select command\r\n    if (command.startsWith(\"select\")) {\r\n      let id = command.split(\"select\")[1].trim().toLowerCase();\r\n      setSelectedId(id);\r\n      if (document.getElementById(id)) {\r\n        document.getElementById(id).style.backgroundColor = \"#DAF7A6\";\r\n\r\n        for (let remainingId of ids) {\r\n          if (remainingId !== id) {\r\n            document.getElementById(remainingId).style.backgroundColor =\r\n              \"transparent\";\r\n          }\r\n        }\r\n      }\r\n    } else if (command.startsWith(\"insert\")) {\r\n      let value = command.split(\"insert\")[1].trim().toLowerCase();\r\n      if (document.getElementById(selectedId)) {\r\n        document.getElementById(selectedId).value = value;\r\n      }\r\n    } else if (command.startsWith(\"clear\")) {\r\n      let id = command.split(\"clear\")[1].trim().toLowerCase();\r\n\r\n      if (document.getElementById(id)) {\r\n        document.getElementById(id).value = \"\";\r\n      }\r\n    }\r\n  }, [command]);\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <div>Welcome to forms</div>\r\n      <Container className=\"my-4\">\r\n        <Form>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  id={ids[0]}\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  id={ids[1]}\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control id={ids[2]} as=\"textarea\" rows={3}></Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control type=\"number\" id={ids[3]}></Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Button variant=\"primary\" type=\"button\" onClick={uploadAudioData}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Container>\r\n      <Container className=\"my-4\">\r\n        <div>\r\n          <ReactMic\r\n            record={record}\r\n            className=\"sound-wave\"\r\n            onStop={onStop}\r\n            onData={onData}\r\n            strokeColor=\"transparent\"\r\n            backgroundColor=\"transparent\"\r\n            channelCount={1}\r\n            mimeType=\"audio/wav\"\r\n          />\r\n          <Button onClick={startRecording} type=\"button\">\r\n            Start\r\n          </Button>\r\n          <Button onClick={stopRecording} type=\"button\">\r\n            Stop\r\n          </Button>\r\n        </div>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default FormComponent;\r\n","import React from \"react\";\r\n\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport NotFoundComponent from \"../components/404-not-found/Not.Found.Component\";\r\nimport FormComponent from \"../components/html-form/Form.Component\";\r\nimport HomeComponent from \"../components/home/Home.Component\";\r\n\r\nimport \"./App.Routes.css\";\r\nimport PDFComponent from \"../components/pdf-form/PDF.Component\";\r\nimport HealthComponent from \"../components/health/Health.Component\";\r\n\r\nfunction AppRoutes() {\r\n  return (\r\n    <React.Fragment>\r\n      {/* Navigation bar declaration */}\r\n      <Router>\r\n        <Navbar bg=\"light\">\r\n          <Navbar.Brand href=\"#home\" className=\"mx-4\">\r\n            STOF\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"custom-navbar-nav\"></Navbar.Toggle>\r\n          <Navbar.Collapse>\r\n            <Nav className=\"d-flex justify-content-center\">\r\n              <Nav.Item className=\"mx-4\">\r\n                <Nav.Link href=\"/\">HTML Form</Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n        {/*  Route - Component correspondence declaration*/}\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <FormComponent />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AppRoutes;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport AppRoutes from \"./routes/App.Routes\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRoutes></AppRoutes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}